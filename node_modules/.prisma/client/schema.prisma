// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  isAuthor Boolean
  hash     String
  salt     String
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  text        String
  authorId    Int
  createdAt   DateTime  @default(now())
  isPublished Boolean
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  authorID  Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

// model Folder {
//   id          Int      @id @default(autoincrement())
//   name        String
//   folderName  String
//   createdAt   DateTime @default(now())
//   location    String
//   children    Folder[] @relation("children")
//   parent      Folder?  @relation("children", fields: [parentId], references: [id])
//   parentId    Int?
//   files       File[]

//   @@unique(name:"nameLocation", [name, location])
// }

// model File {
//   id          Int      @id @default(autoincrement())
//   name        String
//   storageName String
//   createdAt   DateTime @default(now())
//   location    String
//   size        Int
//   folderId    Int
//   folder      Folder  @relation(fields: [folderId], references: [id])

//   @@unique([folderId, name])
// }
